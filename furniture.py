# -*- coding: utf-8 -*-
"""Furniture.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qMWZxUgjgWcPxYMH4v1zQfWuLZVSYeVL
"""

!pip install roboflow

import os

from google.colab import drive
drive.mount('/content/drive')

os.chdir('/content/drive/MyDrive/furniture model')

from roboflow import Roboflow
rf = Roboflow(api_key="oIa4pG1L6Is1sE1Vd3x2")
project = rf.workspace("roboflow-100").project("furniture-ngpea")
version = project.version(2)
dataset = version.download("yolov8")

# I am using YOLOv8 and install its dependencies
!pip install torch torchvision opencv-python ultralytics

from ultralytics import YOLO
print("YOLOv8 is installed successfully!")

# Load a pre-trained model
from ultralytics import YOLO
model = YOLO("yolov8n.pt")

results = model.train(
    data="/content/drive/MyDrive/furniture model/furniture-2/data.yaml",
    epochs=50,
    imgsz=640,
    batch=16,
    lr0=0.01,  # Initial learning rate
    momentum=0.937,  # SGD momentum
    weight_decay=0.0005,  # Optimizer weight decay
    dropout=0.2  # Dropout for regularization
)

from ultralytics import YOLO

# Load the trained model
model_path = "/content/drive/MyDrive/furniture model/runs/detect/train3/weights/best.pt"
model = YOLO(model_path)



from google.colab import files
uploaded = files.upload()

import cv2
import numpy as np

# Get the uploaded file name
uploaded_file_name = next(iter(uploaded))

# Read the image
image = cv2.imdecode(np.frombuffer(uploaded[uploaded_file_name], np.uint8), cv2.IMREAD_COLOR)

# Perform object detection
results = model(image)

# Visualize the results
annotated_image = results[0].plot()

# Convert BGR to RGB for displaying in Colab
annotated_image_rgb = cv2.cvtColor(annotated_image, cv2.COLOR_BGR2RGB)

from matplotlib import pyplot as plt

# Display the image with detections
plt.imshow(annotated_image_rgb)
plt.axis('off')  # Hide axes
plt.show()

